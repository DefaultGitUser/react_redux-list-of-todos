{"version":3,"sources":["features/filter.ts","features/currentTodo.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TableRow/TableRow.tsx","components/TodoList/TodoList.tsx","utils/todosHelper.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["StatusEnum","actions","todo","type","payload","currentTodoReducer","state","action","status","query","filterReducer","filter","All","todos","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TableRow","id","title","completed","dispatch","toggleCurrentTodo","useCallback","toggledTodo","currentTodoActions","className","classNames","onClick","TodoList","visibleTodos","useMemo","result","toLowerCase","includes","getVisibleTodos","length","map","TodoFilter","onSubmit","event","preventDefault","onChange","e","filterActions","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoading","setIsLoading","userId","user","setUser","useEffect","getUser","finally","href","email","name","App","isError","setIsError","todosFromServ","todosActions","catch","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.676e5996.chunk.js","sourcesContent":["export enum StatusEnum {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n\ntype SetStatusAction = {\n  type: 'filter/SET_STATUS';\n  payload: {\n    status: StatusEnum\n  };\n};\n\ntype SetQueryAction = {\n  type: 'filter/SET_QUERY';\n  payload: {\n    query: string\n  };\n};\n\nconst setStatus = (status: StatusEnum): SetStatusAction => (\n  {\n    type: 'filter/SET_STATUS',\n    payload: {\n      status,\n    },\n  }\n);\n\nconst setQuery = (query: string): SetQueryAction => (\n  {\n    type: 'filter/SET_QUERY',\n    payload: {\n      query,\n    },\n  }\n);\n\ntype Action = SetStatusAction | SetQueryAction;\n\nexport type Filter = {\n  query: string;\n  status: StatusEnum;\n};\n\nexport const actions = { setStatus, setQuery };\n\nconst filterReducer = (\n  filter: Filter = {\n    query: '',\n    status: StatusEnum.All,\n  },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/SET_STATUS':\n      return { ...filter, status: action.payload.status };\n    case 'filter/SET_QUERY':\n      return { ...filter, query: action.payload.query };\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n    case 'currentTodo/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodos = {\n  type: 'todos/SET';\n  payload: {\n    todos: Todo[];\n  };\n};\n\nconst setTodos = (todos: Todo[]): SetTodos => ({\n  type: 'todos/SET',\n  payload: {\n    todos,\n  },\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo[] | [];\ntype Action = SetTodos;\n\nconst todosReducer = (todos:State = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [...action.payload.todos];\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TableRow: React.FC<Props> = ({ todo }) => {\n  const { id, title, completed } = todo;\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(store => store.currentTodo);\n\n  const setCurrentTodo = (\n    todoItem: Todo,\n  ) => dispatch(currentTodoActions.setTodo(todoItem));\n\n  const unsetCurrentTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  const toggleCurrentTodo = useCallback((toggledTodo: Todo) => {\n    return currentTodo?.id === toggledTodo.id\n      ? unsetCurrentTodo()\n      : setCurrentTodo(toggledTodo);\n  }, [currentTodo]);\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      key={id}\n      className={classNames(\n        { 'has-background-info-light': currentTodo?.id === id },\n      )}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span\n            className=\"icon\"\n            data-cy=\"iconCompleted\"\n          >\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames(\n            { 'has-text-danger': !completed },\n            { 'has-text-success': completed },\n          )}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => toggleCurrentTodo(todo)}\n        >\n          <span className=\"icon\">\n            {\n              currentTodo?.id === id\n                ? (<i className=\"far fa-eye-slash\" />)\n                : (<i className=\"far fa-eye\" />)\n            }\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport { useMemo } from 'react';\n\nimport { useAppSelector } from '../../app/hooks';\nimport { getVisibleTodos } from '../../utils/todosHelper';\nimport { TableRow } from '../TableRow';\n\nexport const TodoList = () => {\n  const todos = useAppSelector(state => state.todos);\n  const filter = useAppSelector(state => state.filter);\n  const visibleTodos = useMemo(() => {\n    return getVisibleTodos(todos, filter);\n  }, [filter]);\n\n  return (\n    <>\n      {!visibleTodos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleTodos.map(todo => (\n              <TableRow todo={todo} key={todo.id} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { Filter } from '../features/filter';\nimport { Todo } from '../types/Todo';\n\nfunction getVisibleTodos(todos: Todo[], filter: Filter) {\n  let result = [...todos];\n\n  if (filter.status !== 'all') {\n    result = result.filter(todo => {\n      switch (filter.status) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  if (!filter.query) {\n    return result;\n  }\n\n  return result.filter(todo => {\n    return todo.title.toLowerCase()\n      .includes(filter.query.toLowerCase());\n  });\n}\n\nexport { getVisibleTodos };\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { StatusEnum, actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const query = useAppSelector(store => store.filter.query);\n\n  const setStatus = (\n    e: React.ChangeEvent<HTMLSelectElement>,\n  ) => dispatch(filterActions.setStatus(e.target.value as StatusEnum));\n\n  const setQuery = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => dispatch(filterActions.setQuery(e.target.value));\n\n  const dropQuery = () => dispatch(filterActions.setQuery(''));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={setStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          onChange={setQuery}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={query}\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={dropQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  currentTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ currentTodo }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    userId,\n    id,\n    title,\n    completed,\n  } = currentTodo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const dispatch = useAppDispatch();\n\n  const unsetCurrentTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {(!isLoading && user) && (\n\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {`${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={unsetCurrentTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const todosFromServ = useAppSelector(store => store.todos);\n  const currentTodo = useAppSelector(store => store.currentTodo);\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => dispatch(todosActions.setTodos(todos)))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {isLoading && (\n              <Loader />\n            )}\n\n            {isError && (\n              <p className=\"notification is-warning\">\n                Всьо ідьот по плану.\n              </p>\n            )}\n\n            {(!!todosFromServ.length && !isLoading) && (\n              <>\n                <h1 className=\"title\">Todos:</h1>\n\n                <div className=\"block\">\n                  <TodoFilter />\n                </div>\n\n                <div className=\"block\">\n                  <TodoList />\n                </div>\n              </>\n            )}\n\n          </div>\n        </div>\n      </div>\n\n      { currentTodo && (\n        <TodoModal currentTodo={currentTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}